{
  "language": "Solidity",
  "sources": {
    "contracts/StandarImpl.sol": {
      "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\ncontract StandarImpl {\n  string public constant VERSION = '1.0.0';\n\n  bool public initialized;\n\n  uint256 public value;\n\n\n  modifier initializer() {\n    require(!initialized, \"Only initialize once!\");\n    _;\n\n    initialized = true;\n  }\n\n  function initialize(uint256 _initValue) public initializer {\n    value = _initValue;\n  }\n\n  function setValue(uint256 _newValue) public {\n    value = _newValue * 10;\n  }\n  \n}"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}